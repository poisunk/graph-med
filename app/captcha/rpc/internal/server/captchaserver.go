// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: captcha.proto

package server

import (
	"context"

	"graph-med/app/captcha/rpc/internal/logic"
	"graph-med/app/captcha/rpc/internal/svc"
	"graph-med/app/captcha/rpc/pd"
)

type CaptchaServer struct {
	svcCtx *svc.ServiceContext
	pd.UnimplementedCaptchaServer
}

func NewCaptchaServer(svcCtx *svc.ServiceContext) *CaptchaServer {
	return &CaptchaServer{
		svcCtx: svcCtx,
	}
}

func (s *CaptchaServer) RotateCaptcha(ctx context.Context, in *pd.RotateCaptchaReq) (*pd.RotateCaptchaResp, error) {
	l := logic.NewRotateCaptchaLogic(ctx, s.svcCtx)
	return l.RotateCaptcha(in)
}

func (s *CaptchaServer) DigitCaptcha(ctx context.Context, in *pd.DigitCaptchaReq) (*pd.DigitCaptchaResp, error) {
	l := logic.NewDigitCaptchaLogic(ctx, s.svcCtx)
	return l.DigitCaptcha(in)
}

func (s *CaptchaServer) EmailCaptcha(ctx context.Context, in *pd.EmailCaptchaReq) (*pd.EmailCaptchaResp, error) {
	l := logic.NewEmailCaptchaLogic(ctx, s.svcCtx)
	return l.EmailCaptcha(in)
}

func (s *CaptchaServer) SendEmailCode(ctx context.Context, in *pd.SendEmailCodeReq) (*pd.SendEmailCodeResp, error) {
	l := logic.NewSendEmailCodeLogic(ctx, s.svcCtx)
	return l.SendEmailCode(in)
}

func (s *CaptchaServer) VerifyCaptcha(ctx context.Context, in *pd.VerifyCaptchaReq) (*pd.VerifyCaptchaResp, error) {
	l := logic.NewVerifyCaptchaLogic(ctx, s.svcCtx)
	return l.VerifyCaptcha(in)
}
