// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: captcha.proto

package pd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// rotate
type RotateCaptchaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateCaptchaReq) Reset() {
	*x = RotateCaptchaReq{}
	mi := &file_captcha_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateCaptchaReq) ProtoMessage() {}

func (x *RotateCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateCaptchaReq.ProtoReflect.Descriptor instead.
func (*RotateCaptchaReq) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{0}
}

type RotateCaptchaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptchaId     string                 `protobuf:"bytes,1,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	ImageBase64   string                 `protobuf:"bytes,2,opt,name=imageBase64,proto3" json:"imageBase64,omitempty"`
	ThumbBase64   string                 `protobuf:"bytes,3,opt,name=thumbBase64,proto3" json:"thumbBase64,omitempty"`
	ParentSize    int32                  `protobuf:"varint,4,opt,name=parentSize,proto3" json:"parentSize,omitempty"`
	ChildSize     int32                  `protobuf:"varint,5,opt,name=childSize,proto3" json:"childSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateCaptchaResp) Reset() {
	*x = RotateCaptchaResp{}
	mi := &file_captcha_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateCaptchaResp) ProtoMessage() {}

func (x *RotateCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateCaptchaResp.ProtoReflect.Descriptor instead.
func (*RotateCaptchaResp) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{1}
}

func (x *RotateCaptchaResp) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *RotateCaptchaResp) GetImageBase64() string {
	if x != nil {
		return x.ImageBase64
	}
	return ""
}

func (x *RotateCaptchaResp) GetThumbBase64() string {
	if x != nil {
		return x.ThumbBase64
	}
	return ""
}

func (x *RotateCaptchaResp) GetParentSize() int32 {
	if x != nil {
		return x.ParentSize
	}
	return 0
}

func (x *RotateCaptchaResp) GetChildSize() int32 {
	if x != nil {
		return x.ChildSize
	}
	return 0
}

// digit
type DigitCaptchaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitCaptchaReq) Reset() {
	*x = DigitCaptchaReq{}
	mi := &file_captcha_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitCaptchaReq) ProtoMessage() {}

func (x *DigitCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitCaptchaReq.ProtoReflect.Descriptor instead.
func (*DigitCaptchaReq) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{2}
}

type DigitCaptchaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptchaId     string                 `protobuf:"bytes,1,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	CaptchaImg    string                 `protobuf:"bytes,2,opt,name=CaptchaImg,proto3" json:"CaptchaImg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitCaptchaResp) Reset() {
	*x = DigitCaptchaResp{}
	mi := &file_captcha_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitCaptchaResp) ProtoMessage() {}

func (x *DigitCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitCaptchaResp.ProtoReflect.Descriptor instead.
func (*DigitCaptchaResp) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{3}
}

func (x *DigitCaptchaResp) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *DigitCaptchaResp) GetCaptchaImg() string {
	if x != nil {
		return x.CaptchaImg
	}
	return ""
}

// email
type EmailCaptchaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailCaptchaReq) Reset() {
	*x = EmailCaptchaReq{}
	mi := &file_captcha_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailCaptchaReq) ProtoMessage() {}

func (x *EmailCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailCaptchaReq.ProtoReflect.Descriptor instead.
func (*EmailCaptchaReq) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{4}
}

func (x *EmailCaptchaReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type EmailCaptchaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptchaId     string                 `protobuf:"bytes,1,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailCaptchaResp) Reset() {
	*x = EmailCaptchaResp{}
	mi := &file_captcha_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailCaptchaResp) ProtoMessage() {}

func (x *EmailCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailCaptchaResp.ProtoReflect.Descriptor instead.
func (*EmailCaptchaResp) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{5}
}

func (x *EmailCaptchaResp) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

// send email
type SendEmailCodeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailCodeReq) Reset() {
	*x = SendEmailCodeReq{}
	mi := &file_captcha_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailCodeReq) ProtoMessage() {}

func (x *SendEmailCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailCodeReq.ProtoReflect.Descriptor instead.
func (*SendEmailCodeReq) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{6}
}

func (x *SendEmailCodeReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendEmailCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SendEmailCodeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEmailCodeResp) Reset() {
	*x = SendEmailCodeResp{}
	mi := &file_captcha_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEmailCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEmailCodeResp) ProtoMessage() {}

func (x *SendEmailCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEmailCodeResp.ProtoReflect.Descriptor instead.
func (*SendEmailCodeResp) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{7}
}

func (x *SendEmailCodeResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// verify
type VerifyCaptchaReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CaptchaType   string                 `protobuf:"bytes,1,opt,name=captchaType,proto3" json:"captchaType,omitempty"`
	CaptchaId     string                 `protobuf:"bytes,2,opt,name=captchaId,proto3" json:"captchaId,omitempty"`
	Answer        string                 `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCaptchaReq) Reset() {
	*x = VerifyCaptchaReq{}
	mi := &file_captcha_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCaptchaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaReq) ProtoMessage() {}

func (x *VerifyCaptchaReq) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaReq.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaReq) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{8}
}

func (x *VerifyCaptchaReq) GetCaptchaType() string {
	if x != nil {
		return x.CaptchaType
	}
	return ""
}

func (x *VerifyCaptchaReq) GetCaptchaId() string {
	if x != nil {
		return x.CaptchaId
	}
	return ""
}

func (x *VerifyCaptchaReq) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type VerifyCaptchaResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyCaptchaResp) Reset() {
	*x = VerifyCaptchaResp{}
	mi := &file_captcha_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyCaptchaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaResp) ProtoMessage() {}

func (x *VerifyCaptchaResp) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaResp.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaResp) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{9}
}

func (x *VerifyCaptchaResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_captcha_proto protoreflect.FileDescriptor

const file_captcha_proto_rawDesc = "" +
	"\n" +
	"\rcaptcha.proto\x12\x02pd\"\x12\n" +
	"\x10RotateCaptchaReq\"\xb3\x01\n" +
	"\x11RotateCaptchaResp\x12\x1c\n" +
	"\tcaptchaId\x18\x01 \x01(\tR\tcaptchaId\x12 \n" +
	"\vimageBase64\x18\x02 \x01(\tR\vimageBase64\x12 \n" +
	"\vthumbBase64\x18\x03 \x01(\tR\vthumbBase64\x12\x1e\n" +
	"\n" +
	"parentSize\x18\x04 \x01(\x05R\n" +
	"parentSize\x12\x1c\n" +
	"\tchildSize\x18\x05 \x01(\x05R\tchildSize\"\x11\n" +
	"\x0fDigitCaptchaReq\"P\n" +
	"\x10DigitCaptchaResp\x12\x1c\n" +
	"\tcaptchaId\x18\x01 \x01(\tR\tcaptchaId\x12\x1e\n" +
	"\n" +
	"CaptchaImg\x18\x02 \x01(\tR\n" +
	"CaptchaImg\"'\n" +
	"\x0fEmailCaptchaReq\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\"0\n" +
	"\x10EmailCaptchaResp\x12\x1c\n" +
	"\tcaptchaId\x18\x01 \x01(\tR\tcaptchaId\"<\n" +
	"\x10SendEmailCodeReq\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\"-\n" +
	"\x11SendEmailCodeResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"j\n" +
	"\x10VerifyCaptchaReq\x12 \n" +
	"\vcaptchaType\x18\x01 \x01(\tR\vcaptchaType\x12\x1c\n" +
	"\tcaptchaId\x18\x02 \x01(\tR\tcaptchaId\x12\x16\n" +
	"\x06answer\x18\x03 \x01(\tR\x06answer\"-\n" +
	"\x11VerifyCaptchaResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xb9\x02\n" +
	"\aCaptcha\x12<\n" +
	"\rRotateCaptcha\x12\x14.pd.RotateCaptchaReq\x1a\x15.pd.RotateCaptchaResp\x129\n" +
	"\fDigitCaptcha\x12\x13.pd.DigitCaptchaReq\x1a\x14.pd.DigitCaptchaResp\x129\n" +
	"\fEmailCaptcha\x12\x13.pd.EmailCaptchaReq\x1a\x14.pd.EmailCaptchaResp\x12<\n" +
	"\rSendEmailCode\x12\x14.pd.SendEmailCodeReq\x1a\x15.pd.SendEmailCodeResp\x12<\n" +
	"\rVerifyCaptcha\x12\x14.pd.VerifyCaptchaReq\x1a\x15.pd.VerifyCaptchaRespB\x06Z\x04./pdb\x06proto3"

var (
	file_captcha_proto_rawDescOnce sync.Once
	file_captcha_proto_rawDescData []byte
)

func file_captcha_proto_rawDescGZIP() []byte {
	file_captcha_proto_rawDescOnce.Do(func() {
		file_captcha_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_captcha_proto_rawDesc), len(file_captcha_proto_rawDesc)))
	})
	return file_captcha_proto_rawDescData
}

var file_captcha_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_captcha_proto_goTypes = []any{
	(*RotateCaptchaReq)(nil),  // 0: pd.RotateCaptchaReq
	(*RotateCaptchaResp)(nil), // 1: pd.RotateCaptchaResp
	(*DigitCaptchaReq)(nil),   // 2: pd.DigitCaptchaReq
	(*DigitCaptchaResp)(nil),  // 3: pd.DigitCaptchaResp
	(*EmailCaptchaReq)(nil),   // 4: pd.EmailCaptchaReq
	(*EmailCaptchaResp)(nil),  // 5: pd.EmailCaptchaResp
	(*SendEmailCodeReq)(nil),  // 6: pd.SendEmailCodeReq
	(*SendEmailCodeResp)(nil), // 7: pd.SendEmailCodeResp
	(*VerifyCaptchaReq)(nil),  // 8: pd.VerifyCaptchaReq
	(*VerifyCaptchaResp)(nil), // 9: pd.VerifyCaptchaResp
}
var file_captcha_proto_depIdxs = []int32{
	0, // 0: pd.Captcha.RotateCaptcha:input_type -> pd.RotateCaptchaReq
	2, // 1: pd.Captcha.DigitCaptcha:input_type -> pd.DigitCaptchaReq
	4, // 2: pd.Captcha.EmailCaptcha:input_type -> pd.EmailCaptchaReq
	6, // 3: pd.Captcha.SendEmailCode:input_type -> pd.SendEmailCodeReq
	8, // 4: pd.Captcha.VerifyCaptcha:input_type -> pd.VerifyCaptchaReq
	1, // 5: pd.Captcha.RotateCaptcha:output_type -> pd.RotateCaptchaResp
	3, // 6: pd.Captcha.DigitCaptcha:output_type -> pd.DigitCaptchaResp
	5, // 7: pd.Captcha.EmailCaptcha:output_type -> pd.EmailCaptchaResp
	7, // 8: pd.Captcha.SendEmailCode:output_type -> pd.SendEmailCodeResp
	9, // 9: pd.Captcha.VerifyCaptcha:output_type -> pd.VerifyCaptchaResp
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_captcha_proto_init() }
func file_captcha_proto_init() {
	if File_captcha_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_captcha_proto_rawDesc), len(file_captcha_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_captcha_proto_goTypes,
		DependencyIndexes: file_captcha_proto_depIdxs,
		MessageInfos:      file_captcha_proto_msgTypes,
	}.Build()
	File_captcha_proto = out.File
	file_captcha_proto_goTypes = nil
	file_captcha_proto_depIdxs = nil
}
