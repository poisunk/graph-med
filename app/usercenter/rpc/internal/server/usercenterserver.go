// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: usercenter.proto

package server

import (
	"context"

	"graph-med/app/usercenter/rpc/internal/logic"
	"graph-med/app/usercenter/rpc/internal/svc"
	"graph-med/app/usercenter/rpc/pd"
)

type UsercenterServer struct {
	svcCtx *svc.ServiceContext
	pd.UnimplementedUsercenterServer
}

func NewUsercenterServer(svcCtx *svc.ServiceContext) *UsercenterServer {
	return &UsercenterServer{
		svcCtx: svcCtx,
	}
}

func (s *UsercenterServer) Login(ctx context.Context, in *pd.LoginReq) (*pd.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UsercenterServer) Register(ctx context.Context, in *pd.RegisterReq) (*pd.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UsercenterServer) GetUserInfo(ctx context.Context, in *pd.GetUserInfoReq) (*pd.GetUserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UsercenterServer) GenerateToken(ctx context.Context, in *pd.GenerateTokenReq) (*pd.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}
