// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: chat.proto

package chat

import (
	"context"

	"graph-med/app/chat/rpc/pd"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateChatSessionReq  = pd.CreateChatSessionReq
	CreateChatSessionResp = pd.CreateChatSessionResp

	Chat interface {
		CreateChatSession(ctx context.Context, in *CreateChatSessionReq, opts ...grpc.CallOption) (*CreateChatSessionResp, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

func (m *defaultChat) CreateChatSession(ctx context.Context, in *CreateChatSessionReq, opts ...grpc.CallOption) (*CreateChatSessionResp, error) {
	client := pd.NewChatClient(m.cli.Conn())
	return client.CreateChatSession(ctx, in, opts...)
}
